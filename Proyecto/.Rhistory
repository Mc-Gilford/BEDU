Tabla<-table(x=EquiposEncasa, y=EquiposVisita)
Tabla
cbind(EquiposEncasa,EquiposVisita)
rbind(EquiposEncasa,EquiposVisita)
length(EquiposVisita)
length(EquiposEncasa)
Tabla<-table(x=EquiposEncasa, y=EquiposVisita)
Tabla
Tabla<-table(x=Primeradivision$HomeTeam, y=Primeradivision$AwayTeam)
Tabla
Tabla<-table(x=Primeradivision$HomeTeam, y=Primeradivision$AwayTeam,EquiposEncasa,EquiposVisita)
Tabla
Tabla<-table(x=Primeradivision$HomeTeam, y=Primeradivision$AwayTeam)
Tabla
Tabla
cbind(EquiposEncasa,EquiposVisita)
rbind(EquiposEncasa,EquiposVisita)
EquiposEncasa
m<-cbind(EquiposEncasa,EquiposVisita)
m<-rbind(EquiposEncasa,EquiposVisita)
m
Tabla<-table(x=EquiposEncasa, y=EquiposVisita)
Tabla
Tabla<-table(EquiposCasa=EquiposEncasa, EquiposVis=EquiposVisita)
Tabla
which.max(EquiposEncasa)
which.max(EquiposEncasa)
which.min(EquiposVisita)
EquiposEncasa[298]
EquiposEncasa[1]
EquiposVisita[1]
which.min(EquiposEncasa)
which.min(EquiposEncasa)
which.max(Equipos)
which.max(EquiposVisita)
which.min(EquiposVisita)
ncasa
which.max(EquiposEncasa)
which.min(EquiposEncasa)
EquiposEncasa[5]
Tabla
Tabla<-table(EquiposCasa=EquiposEncasa, EquiposVis=EquiposVisita)
Tabla
Primeradivision
length(Primeradivision)
Tabla
Tabla2 <- table(c(1,2,3),c(1,2,3))
Tabla2
Tabla2 <- table(c(1,2,3),c(1,1,3))
Tabla2
Tabla<-table(EquiposCasa=EquiposEncasa, EquiposVis=EquiposVisita)
Tabla
Tabla<-mean(Tabla)
Tabla
Tabla<-table(EquiposCasa=EquiposEncasa, EquiposVis=EquiposVisita)
Tabla
Tabla<-mean(Tabla)
Tabla<-table(EquiposCasa=EquiposEncasa, EquiposVis=EquiposVisita)
Tabla
apply(Tabla,1,mean)
apply(Tabla,2,mean)
Tabla
apply(array, 1:2, sum)
apply(array, 1, sum)
apply(Tabla, 1:2, sum)
apply(Tabla, 1:2, sum)
Tabla
Tabla<-table(EquiposCasa=EquiposEncasa, EquiposVis=EquiposVisita)
apply(Tabla, 1:2, sum)
Tabla
apply(Tabla,1,sum)
apply(Tabla,1:2,sum)
apply(Tabla,1:2,sum)
apply(Tabla,1,sum)
apply(Tabla,2,sum)
sumf <-apply(Tabla,1,sum)
sumc <-apply(Tabla,2,sum)
sumf
sum(sumf)
sumf<-sum(sumf)
sumf
sumc<-sum(c)
sumc<-sum(sumc)
sumc
sumc
sumf
length(Primeradivision)
EquiposEncasa
length(EquiposEncasa)
length(EquiposEncasa)
length(EquiposVisita)
EquiposEncasa
sumf<-sum(sumf)
sumc<-sum(sumc)
sumc
sumf
length(EquiposEncasa)
length(EquiposVisita)
length(EquiposEncasa)
EquiposEncasa
Tabla
sumf<-sum(sumf)
sumf <-apply(Tabla,1,sum)
sumc <-apply(Tabla,2,sum)
sumf
length(EquiposEncasa)
length(EquiposVisita)
sumf<-sumf/
sumc<-
sumf<-sum(sumf)
sumc<-sum(sumc)
sumc
sumf
sumf <-apply(Tabla,1,sum)
sumc <-apply(Tabla,2,sum)
#Probabilidad Marginal
n<-length(EquiposEncasa)
n
sumf<-sumf/n
sumf
sum(sumf)
sumc<-sumc/n
sumc
sum(sumc)
Tabla
#Probabilidad conjunta
Pconjunta<- Tabla/n
Pconjunta
sumf<-apply(Pconjunta,1,sum)
sumc<-apply(Pconjunta,2,sum)
sumf
sumc
sum(sumc)
sumf(sumf)
sum(sumf)
install.packages("DBI")
install.packages("RMySQL")
library(DBI)
library(RMySQL)
MyDataBase <- dbConnect(
drv = RMySQL::MySQL(),
dbname = "shinydemo",
host = "shiny-demo.csa7qlmguqrf.us-east-1.rds.amazonaws.com",
username = "guest",
password = "guest")
dbListTables(MyDataBase)
dbListFields(MyDataBase, 'City')
DataDB <- dbGetQuery(MyDataBase, "select * from City")
DataDB
class(DataDB)
head(DataDB)
pop.mean <- mean(DataDB$Population)  # Media a la variable de población
pop.mean
pop.3 <- pop.mean *3   # Operaciones aritméticas
pop.3
library(dplyr)
pop50.mex <-  DataDB %>% filter(CountryCode == "MEX" ,  Population > 50000)   # Ciudades del país de México con más de 50,000 habitantes
head(pop50.mex)
unique(DataDB$CountryCode)   # Países que contiene la BDD
dbDisconnect(MyDataBase)
library(dbplyr)
library(pool)
install.packages("pool")
library(dbplyr)
# install.packages("pool")
install.packages("dbplyr")
library(dbplyr)
library(pool)
library(pool)
my_db <- dbPool(
RMySQL::MySQL(),
dbname = "shinydemo",
host = "shiny-demo.csa7qlmguqrf.us-east-1.rds.amazonaws.com",
username = "guest",
password = "guest"
)
dbListTables(my_db)
my_db %>% tbl("Country") %>% head(5) # library(dplyr)
my_db %>% tbl("CountryLanguage") %>% head(5)
library(DBI)
conn <- dbConnect(
drv = RMySQL::MySQL(),
dbname = "shinydemo",
host = "shiny-demo.csa7qlmguqrf.us-east-1.rds.amazonaws.com",
username = "guest",
password = "guest")
rs <- dbSendQuery(conn, "SELECT * FROM City LIMIT 5;")
dbFetch(rs)
unique(DataDB$CountryCode)   # Países que contiene la BDD
dbDisconnect(MyDataBase)
dbDisconnect(MyDataBase)
dbDisconnect(MyDataBase)
rs <- dbSendQuery(conn, "SELECT * FROM City LIMIT 5;")
dbFetch(rs)
dbClearResult(rs)
dbDisconnect(conn)
install.packages("rjson")   #Siempre usar comillas en el nombre del paquete
library(rjson)            # Quitar comillas del nombre
URL <- "https://tools.learningcontainer.com/sample-json-file.json" # Asignando el link a una variable
JsonData <- fromJSON(file= URL)     # Se guarda el JSon en un objeto de R
class(JsonData)                     # Vemos que tipo de objeto es JsonData
str(JsonData)                       # Vemos la naturaleza de sus variables
sqrt(JsonData$Mobile)
# install.packages("XML")
library(XML)
link <- "http://www-db.deis.unibo.it/courses/TW/DOCS/w3schools/xml/cd_catalog.xml"
# Analizando el XML desde la web
xmlfile <- xmlTreeParse(link)
summary(xmlfile)
head(xmlfile)
#Extraer los valores xml
topxml <- xmlSApply(xmlfile, function(x) xmlSApply(x, xmlValue))
# Colocandolos en un Data Frame
xml_df <- data.frame(t(topxml), row.names= NULL)
str(xml_df) # Observar la naturaleza de las variables del DF
xml_df$PRICE <- as.numeric(xml_df$PRICE)
xml_df$YEAR <- as.numeric(xml_df$YEAR)
mean(xml_df$PRICE)
mean(xml_df$YEAR)
data_df <- xmlToDataFrame(link)
head(data_df)
# install.packages("rvest")
library(rvest)
install.packages("rvest")
data_df <- xmlToDataFrame(link)
head(data_df)
data_df <- xmlToDataFrame(link)
head(data_df)
# install.packages("rvest")
library(rvest)
# install.packages("rvest")
library(rvest)
theurl <- "https://solarviews.com/span/data2.htm"
file <- read_html(theurl)    # Leemos el html
file
class(file)
tables <- html_nodes(file, "table")
tables
table1 <- html_table(tables[4], fill = TRUE)
table <- na.omit(as.data.frame(table1))   # Quitamos NAÂ´s que meten filas extras
str(table)  # Vemos la naturaleza de las variables
table <- na.omit(as.data.frame(table1))   # Quitamos NAÂ´s que meten filas extras
str(table)  # Vemos la naturaleza de las variables
table$Albedo <- as.numeric(table$Albedo)
str(table)  # Vemos la naturaleza de las variables
table$Albedo <- as.numeric(table$Albedo)
str(table)
library(rvest)
theurl <- "https://www.glassdoor.com.mx/Sueldos/data-scientist-sueldo-SRCH_KO0,14.htm"
file <- read_html(theurl)    # Leemos el html
class(file)
tables <- html_nodes(file, "table")
tables
table1 <- html_table(tables[1], fill = TRUE)
table <- na.omit(as.data.frame(table1))   # Quitamos NAÂ´s que meten filas extras
# y convertimos la lista en un data frame para su manipulaciÃ³n con R
table
table$Sueldo <- as.numeric(table$Sueldo)
# Por Ãºltimo realizamos una conversiÃ³n de una columna tipo chr a num, se pueden
# hacer las conversiones que se requieran
gsub("MXN$", "", table$Sueldo)
table
# Por Ãºltimo realizamos una conversiÃ³n de una columna tipo chr a num, se pueden
# hacer las conversiones que se requieran
gsub("MXN", "", table$Sueldo)
table
theurl <- "https://www.glassdoor.com.mx/Sueldos/data-scientist-sueldo-SRCH_KO0,14.htm"
file <- read_html(theurl)    # Leemos el html
class(file)
tables <- html_nodes(file, "table")
tables
table1 <- html_table(tables[1], fill = TRUE)
# y convertimos la lista en un data frame para su manipulaciÃ³n con R
table
# y convertimos la lista en un data frame para su manipulaciÃ³n con R
table
table1 <- html_table(tables[1], fill = TRUE)
table <- na.omit(as.data.frame(table1))   # Quitamos NAÂ´s que meten filas extras
# y convertimos la lista en un data frame para su manipulaciÃ³n con R
table
# Por Ãºltimo realizamos una conversiÃ³n de una columna tipo chr a num, se pueden
# hacer las conversiones que se requieran
gsub("$", "", table$Sueldo)
table
# Por Ãºltimo realizamos una conversiÃ³n de una columna tipo chr a num, se pueden
# hacer las conversiones que se requieran
gsub("$", "", table$Sueldo)
# Por Ãºltimo realizamos una conversiÃ³n de una columna tipo chr a num, se pueden
# hacer las conversiones que se requieran
gsub("MXN", "", table$Sueldo)
table
gsub("$", "", table$Sueldo)
table
# Por Ãºltimo realizamos una conversiÃ³n de una columna tipo chr a num, se pueden
# hacer las conversiones que se requieran
gsub("MXN", "", table$Sueldo)
table
# Por Ãºltimo realizamos una conversiÃ³n de una columna tipo chr a num, se pueden
# hacer las conversiones que se requieran
gsub("MXN", "", table$Sueldo)
# Por Ãºltimo realizamos una conversiÃ³n de una columna tipo chr a num, se pueden
# hacer las conversiones que se requieran
table<-gsub("MXN", "", table$Sueldo)
table
table<-gsub("/mes", "", table$Sueldo)
table<-gsub("mes", "", table$Sueldo)
table
gsub("mes", "", table)
table1 <- html_table(tables[1], fill = TRUE)
table <- na.omit(as.data.frame(table1))   # Quitamos NAÂ´s que meten filas extras
# y convertimos la lista en un data frame para su manipulaciÃ³n con R
table
# Por Ãºltimo realizamos una conversiÃ³n de una columna tipo chr a num, se pueden
# hacer las conversiones que se requieran
gsub("MXN", "", table$Sueldo)
gsub("mes", "", table$Sueldo)
table
# Por Ãºltimo realizamos una conversiÃ³n de una columna tipo chr a num, se pueden
# hacer las conversiones que se requieran
gsub("MXN", "", table$Sueldo)
gsub("mes", "", table$Sueldo)
table
# Por Ãºltimo realizamos una conversiÃ³n de una columna tipo chr a num, se pueden
# hacer las conversiones que se requieran
gsub("MXN", "", table)
gsub("mes", "", table)
table
# Por Ãºltimo realizamos una conversiÃ³n de una columna tipo chr a num, se pueden
# hacer las conversiones que se requieran
suel<-gsub("MXN", "", table$Sueldo)
suel<-gsub("mes", "", suel)
suel
suel<-gsub("$","",suel)
suel
suel<-gsub("$","",suel)
suel
suel<-gsub("/$/","",suel)
suel
suel<-gsub("\$","",suel)
suel
# Por Ãºltimo realizamos una conversiÃ³n de una columna tipo chr a num, se pueden
# hacer las conversiones que se requieran
suel<-gsub("[^[:alnum:][:blank:]?]", "", suel)
suel
table1 <- html_table(tables[1], fill = TRUE)
table <- na.omit(as.data.frame(table1))   # Quitamos NAÂ´s que meten filas extras
# y convertimos la lista en un data frame para su manipulaciÃ³n con R
table
# Por Ãºltimo realizamos una conversiÃ³n de una columna tipo chr a num, se pueden
# hacer las conversiones que se requieran
suel<-gsub("[^[:alnum:][:blank:]?]", "", table$Sueldo)
suel
suel<-gsub("mes", "", suel)
suel
suel<-gsub("MXN","",suel)
suel
table$Sueldo<-suel
table
table$Sueldo <- as.numeric(table$Sueldo)
str(table)
table
str(table)
which.max(table$Sueldo)
table[which.max(table$Sueldo)]
table[which.max(table$Sueldo)[1]]
table[ mxsuel<-which.max(table$Sueldo) ]
mxsuel<-which.max(table$Sueldo)
table[mxsuel]
mxsuel
table[mxsuel[1]]
table[,mxsuel[1]]
table[mxsuel[1],]
mins<-which.min(table$Sueldo)
tabale[mins[1],]
table[mins[1],]
#install.packages("dplyr")
getwd()
#Colocamos la ruta a donde iremos
setwd("BEDU/DataScience/Postworks/Poswork 1/BEDU/Proyecto/")
datos<-read.csv("Consolidado para R-ENOE-Indicadores estratégicos-enero2005-diciembre2020.csv")
class(datos)
summary(datos)
merge(datos,datos,datos$Año)
merge(datos,datos, by =datos$Año)
merge(datos,datos, by="Año")
d2<-merge(datos,datos, by="Año")
d2
datos<-read.csv("Consolidado para R-ENOE-Indicadores estratégicos-enero2005-diciembre2020.csv")
dim(datos)
dim(d2)
dim(datos)
dim(d2)
datos<=na.omit(dato)
datos<=na.omit(datos)
datos<-na.omit(datos)
datos
group_by(datos, año)
#install.packages("dplyr")
#install.packages("ggplot2")
library(dplyr)
library(ggplot2)
library(ggplot2)
group_by(datos, año)
group_by(datos, "año")
datos
datos<-group_by(datos, "año")
datos
dim(datos)
View(datos)
datos<-read.csv("Consolidado para R-ENOE-Indicadores estratégicos-enero2005-diciembre2020.csv")
dim(datos)
datos<-na.omit(datos)
datos
dim(datoa)
dim(datos)
dim(datos)
dim(datos)
datos<-read.csv("Consolidado para R-ENOE-Indicadores estratégicos-enero2005-diciembre2020.csv")
class(datos)
dim(datos)
dim(datos)
datos<-group_by(datos, "año")
dim(datos)
datos
datos<-read.csv("Consolidado para R-ENOE-Indicadores estratégicos-enero2005-diciembre2020.csv")
class(datos)
summary(datos)
dim(datos)
datos<-group_by(datos, "Año")
datos
dim(datos)
datos<-group_by(datos, Año)
datos
dim(datos)
datos<-group_by(datos, datos$Año)
datos %>% summarise(mediana = median(amount), variance = var(amount))
names(datos)
datos %>% summarise(mediana = median(Población.total))
datos %>% summarise(mediana = median(na.omit(Población.total)))
plot(datos)
plot(datos$Año,datos$Población.total)
plot(x=datos$Año,y=datos$Población.total)
data %>%
ggplot() +
aes(x = datos$Año, datos$Población.de.15.años.y.más) +
geom_histogram(binwidth = 10, col="black", fill = "blue") +
ggtitle("Histograma de Mediciones") +
ylab("Frecuencia") +
xlab("Mediciones") +
theme_light()
str(datos)
datos <- mutate(datos, Año=as.Date("%Y"))
datos <- mutate(datos, Año=as.Date(Año,"%Y"))
datos <- mutate(datos, Año=as.numeric(Año))
str(datos)
datos <- mutate(datos, as.numeric(Población.total:Fuera de sector informal))
datos <- mutate(datos, as.numeric( "Población.total":"Fuera de sector informal"))
datos %>%
mutate_if(is.character, ~as.numeric())
str(datos)
mutate_if(is.character, ~as.numeric
datos %>%
mutate_if(is.character, ~as.numeric)
datos2 <- mutate_all(datos, function(x) as.numeric(as.character(x)))
str(datos)
str(datos2)
View(datos2)
datos2<-datos
View(datos2)
str(datos2)
datos2<- lapply(datos, as.numeric)
datos2
str(datos2)
View(datos2)
View(datos2)
datos <- mutate(datos, as.numeric( "Población.total":"Fuera de sector informal"))
names(datos)
length(datos)
length(datos[,])
length(datos[1,])
length(datos)
datos<-read.csv("Consolidado para R-ENOE-Indicadores estratégicos-enero2005-diciembre2020.csv")
length(datos)
length(datos[1,0])
length(datos[,0])
length(datos[0,0])
length(datos[0,])
length(datos[,0])
datos <- mutate(datos, Año=as.numeric(Año))
str(datos)
datos[1,0]
datos[1,1]
datos[,1]
datos[1,]
datos <- mutate(datos, as.numeric())
length(datos)
datos<-gsub(" ","",datos)
View(datos)
datos<-read.csv("Consolidado para R-ENOE-Indicadores estratégicos-enero2005-diciembre2020.csv")
gsub(" ","",datos)
View(datos)
datos<-as.data.frame(gsub(" ","",datos))
View(datos)
datos<-read.csv("Consolidado para R-ENOE-Indicadores estratégicos-enero2005-diciembre2020.csv")
datos<-as.data.frame(gsub(" ","",datos))
View(datos)
datos<-read.csv("Consolidado para R-ENOE-Indicadores estratégicos-enero2005-diciembre2020.csv")
str(datos)
datos<-read.csv("Consolidado para R-ENOE-Indicadores estratégicos-enero2005-diciembre2020.csv")
str(datos)
datos<-read.csv("Consolidado para R-ENOE-Indicadores estratégicos-enero2005-diciembre2020.csv")
str(datos)
