2*3
2+3
install.packages("dplyr")
library(dplyr)
?mutate
print("Hola R")
sqrt(x=1024)
10000000
100000000000000
10^10000000000
?mean
??mean
x <- matrix(1 : 9, byrow = TRUE, nrow = 3)
View(x)
res <- (1*100)/10
res
install.packages(“ggplot2”)
install.packages(“ggplot2”)
install.packages("ggplot2")
a1[1]
(var.hola <- "Hola Mundo")
var.hola
(var.number <- 5L)
(var.double <- 2.7076)
(var.logical <- T)
(vector <- c(1,2))
class(var.number)
class(var.hola)
class(var.double)
class(var.logical)
class(var.logical)
typeof(var.logical)
typeof(var.numberl)
typeof(var.number)
typeof(var.double)
typeof(var.hola)
class(var.hola)
a <- c(4, 6, 8, 10,12)
b <- c(3, 5, 7, 9)
length(a)
length(b)
a[1]
b[4]
c(a,b)
sort(c(a,b), decreasing = F)
sort(d, decreasing = F)
d<-c(a,b)
sort(d, decreasing = F)
sort(d, decreasing = FALSE)
sort(d, decreasing = TRUE)
FALSE
sort(d, decreasing = FALSE)
d
sort(d, decreasing = T)
sort(c(a,b), decreasing = F)
sort(d, decreasing = T)
sort(d, decreasing = F)
sort(d, decreasing = F)
sort(d, decreasing = T)
3:12  # así de sencillo es
1:1000
0:10
(vector.by2 <- seq(from = 1, to = 10, by =2))
(vector.by3 <- seq(1, 10, 3))
rep(5, times = 6)
(vector.by2 <- seq(from = 1, to = 10, by =2))
rep(a, 2)
rep(b, 3)
c(1, 2) + c(7, 8, 9, 10)
a + b
a - b
a + b
a*b
a/b
(m <- matrix(1:9, nrow = 3, ncol = 3))
m[1,1]
m[ ,1]
(sum.vecmat <- c(1, 2) + m)
(n <- matrix(2:7, 4, 6))
dim(n)
n[n > 4]
which(n > 4)
a <- 2:6
b <- 5:9
cbind(a,b)
rbind(a,b)
apply(n, 1, mean)
# Aplicando una función a las filas o columnas de una matriz (mean, sort)
n
apply(n, 1, mean)
apply(n, 2, sort)
# Aplicando una función a las filas o columnas de una matriz (mean, sort)
n
apply(n, 1, mean)
(milista <- list(nombre = "Pepe", no.hijos = 3, edades.hijos = c(4, 7, 9)))
str(milista)
str(milista)
milista$nombre
milista$no.hijos
milista$no.hijos
milista$no.edades.hijos
milista$edades.hijos
mean(z)
z<-milista$edades.hijos
mean(z)
x <- 6:8
y <- c("A", "B", "C")
(mifile <- data.frame(edad = x, grupo = y))
str(mifile)
mifile[1]
mifile[,1]
mifile[2]
mifile[,1]
mifile$edad
mean(mifile$edad)
paste("La media de la edad es:", mean(mifile$edad))
#1. Genera un vector de 44 entradas (aleatorias) llamado ran
#2. Escribe un loop que eleve al cubo las primeras 15 entradas y les sume 12
#3. Guarda el resultado en un data frame, donde la primera columna sea el número aleatorio y la segunda el resultado, nómbralo df.al
#4. Escribe el pseudocódigo del loop anterior
ran <- rnorm(44)
ran
{
ran[i]<-(ran[i]**2)+12
print(ran[i])
}
i<-0
for(i in 1:15)
{
ran[i]<-(ran[i]**2)+12
print(ran[i])
}
#1. Genera un vector de 44 entradas (aleatorias) llamado ran
#2. Escribe un loop que eleve al cubo las primeras 15 entradas y les sume 12
#3. Guarda el resultado en un data frame, donde la primera columna sea el número aleatorio y la segunda el resultado, nómbralo df.al
#4. Escribe el pseudocódigo del loop anterior
ran <- rnorm(44)
ran
i<-0
e<-c();
e
{
e[i]<-(ran[i]**2)+12
print(ran[i])
}
for(i in 1:15)
for(i in 1:15)
{
e[i]<-(ran[i]**2)+12
print(ran[i])
}
e
df.a1 <- data.frame(numaleatorio = ran, resultado = e)
df.a1
i
i<-i^2
i
df.a1 <- data.frame(numaleatorio = ran[1:15], resultado = e)
df.a1
4. ¿Cúal es el libro de menor y mayor precio?
amazonbooks<-read.csv("BEDU/DataScience/Programacion y Estadistica con R/Sesion 1/bestsellers with categories.csv")
amazonbooks
tAmazon<- t(amazonbooks)
tAmazon
tAmazonAux<-data.frame(tAmazon)
tAmazonAux
tAmazonAux<-NULL
tAmazonAux
tAmazonAux<-data.frame(Nombre:tAmazon)
tAmazonAux<-data.frame(Nombre=tAmazon)
tAmazonAux
tAmazonAux<-data.frame(tAmazon)
tAmazonAux
tAmazon<-tAmazon
tAmazon<-tAmazonAux
tAmazon
colnames(tAmazon)<-tAmazon[1,]
row.names(tAmazon)
tAmazon<-tAmazonAux
tAmazon
tAmazon<- t(amazonbooks)
tAmazonAux<-data.frame(tAmazon)
tAmazon<-tAmazonAux
tAmazon
colnames(tAmazon)<-tAmazon[1,]
col.names(tAmazon)
colnames(tAmazon)
#rowname(tAmazon)
which.max(tAmazon["Price",])
which.min(tAmazon["Price",])
which.(tAmazon["Price",]>43)
which(tAmazon["Price",]>43)
which((tAmazon["Price",])>43)
which(tAmazon["Price",]>43)
Primeradivision
Primeradivision<-read.csv("BEDU/DataScience/Programacion y Estadistica con R/Sesion 1/Postwork/SP1.csv")
Primeradivision
colnames(Primeradivision)
Primeradivision<-read.csv("BEDU/DataScience/Programacion y Estadistica con R/Sesion 1/Postwork/SP1.csv")
Primeradivision<-read.csv("BEDU/DataScience/Programacion y Estadistica con R/Sesion 1/Postwork/SP1.csv")
Primeradivision
colnames(Primeradivision)
Primeradivision<-read.csv("BEDU/DataScience/Programacion y Estadistica con R/Sesion 1/Postwork/SP1.csv")
Primeradivision
colnames(Primeradivision)
Primeradivision<-read.csv("BEDU/DataScience/Programacion y Estadistica con R/Sesion 1/Postwork/SP1.csv")
Primeradivision
colnames(Primeradivision)
Primeradivision<-read.csv("BEDU/DataScience/Programacion y Estadistica con R/Sesion 1/Postwork/SP1.csv")
Primeradivision
#FTHG Goles FTAG Goles en contra
EquiposEncasa <- Primeradivision$FTHG #[archivo$release_year > 2015, ]
EquiposVisita <- Primeradivision$FTAG
EquiposEncasa
EquiposVisita
?table
table(x=EquiposEncasa, y=EquiposVisita)
Tabla<-table(x=EquiposEncasa, y=EquiposVisita)
Tabla
EquiposEncasa
EquiposVisita
Tabla<-table(x=c(0,1,2), y=c(3,4,5))
Tabla
Tabla<-table(x=c(0,1,2), y=c(3,4,5),c(6,7,8),c(9,10,11) )
Tabla
Tabla<-table(x=c(0,1,2), y=c(3,4,5),,,c(6,7,8),c(9,10,11) )
Tabla<-table(x=c(0,1,2), y=c(3,4,5),v,vx,c(6,7,8),c(9,10,11) )
Tabla<-table(x=c(0,1,2), y=c(3,4,5) )
Tabla
Tabla2<-read.ftable(EquiposEncasa);
Tabla2<-read.table(EquiposEncasa);
(n <- matrix(2:7, 4, 6))
Tabla2<-read.table(n);
Tabla
Tabla<-table(x=EquiposEncasa, y=EquiposVisita)
Tabla
cbind(EquiposEncasa,EquiposVisita)
rbind(EquiposEncasa,EquiposVisita)
length(EquiposVisita)
length(EquiposEncasa)
Tabla<-table(x=EquiposEncasa, y=EquiposVisita)
Tabla
Tabla<-table(x=Primeradivision$HomeTeam, y=Primeradivision$AwayTeam)
Tabla
Tabla<-table(x=Primeradivision$HomeTeam, y=Primeradivision$AwayTeam,EquiposEncasa,EquiposVisita)
Tabla
Tabla<-table(x=Primeradivision$HomeTeam, y=Primeradivision$AwayTeam)
Tabla
Tabla
cbind(EquiposEncasa,EquiposVisita)
rbind(EquiposEncasa,EquiposVisita)
EquiposEncasa
m<-cbind(EquiposEncasa,EquiposVisita)
m<-rbind(EquiposEncasa,EquiposVisita)
m
Tabla<-table(x=EquiposEncasa, y=EquiposVisita)
Tabla
Tabla<-table(EquiposCasa=EquiposEncasa, EquiposVis=EquiposVisita)
Tabla
which.max(EquiposEncasa)
which.max(EquiposEncasa)
which.min(EquiposVisita)
EquiposEncasa[298]
EquiposEncasa[1]
EquiposVisita[1]
which.min(EquiposEncasa)
which.min(EquiposEncasa)
which.max(Equipos)
which.max(EquiposVisita)
which.min(EquiposVisita)
ncasa
which.max(EquiposEncasa)
which.min(EquiposEncasa)
EquiposEncasa[5]
Tabla
Tabla<-table(EquiposCasa=EquiposEncasa, EquiposVis=EquiposVisita)
Tabla
Primeradivision
length(Primeradivision)
Tabla
Tabla2 <- table(c(1,2,3),c(1,2,3))
Tabla2
Tabla2 <- table(c(1,2,3),c(1,1,3))
Tabla2
Tabla<-table(EquiposCasa=EquiposEncasa, EquiposVis=EquiposVisita)
Tabla
Tabla<-mean(Tabla)
Tabla
Tabla<-table(EquiposCasa=EquiposEncasa, EquiposVis=EquiposVisita)
Tabla
Tabla<-mean(Tabla)
Tabla<-table(EquiposCasa=EquiposEncasa, EquiposVis=EquiposVisita)
Tabla
apply(Tabla,1,mean)
apply(Tabla,2,mean)
Tabla
apply(array, 1:2, sum)
apply(array, 1, sum)
apply(Tabla, 1:2, sum)
apply(Tabla, 1:2, sum)
Tabla
Tabla<-table(EquiposCasa=EquiposEncasa, EquiposVis=EquiposVisita)
apply(Tabla, 1:2, sum)
Tabla
apply(Tabla,1,sum)
apply(Tabla,1:2,sum)
apply(Tabla,1:2,sum)
apply(Tabla,1,sum)
apply(Tabla,2,sum)
sumf <-apply(Tabla,1,sum)
sumc <-apply(Tabla,2,sum)
sumf
sum(sumf)
sumf<-sum(sumf)
sumf
sumc<-sum(c)
sumc<-sum(sumc)
sumc
sumc
sumf
length(Primeradivision)
EquiposEncasa
length(EquiposEncasa)
length(EquiposEncasa)
length(EquiposVisita)
EquiposEncasa
sumf<-sum(sumf)
sumc<-sum(sumc)
sumc
sumf
length(EquiposEncasa)
length(EquiposVisita)
length(EquiposEncasa)
EquiposEncasa
Tabla
sumf<-sum(sumf)
sumf <-apply(Tabla,1,sum)
sumc <-apply(Tabla,2,sum)
sumf
length(EquiposEncasa)
length(EquiposVisita)
sumf<-sumf/
sumc<-
sumf<-sum(sumf)
sumc<-sum(sumc)
sumc
sumf
sumf <-apply(Tabla,1,sum)
sumc <-apply(Tabla,2,sum)
#Probabilidad Marginal
n<-length(EquiposEncasa)
n
sumf<-sumf/n
sumf
sum(sumf)
sumc<-sumc/n
sumc
sum(sumc)
Tabla
#Probabilidad conjunta
Pconjunta<- Tabla/n
Pconjunta
sumf<-apply(Pconjunta,1,sum)
sumc<-apply(Pconjunta,2,sum)
sumf
sumc
sum(sumc)
sumf(sumf)
sum(sumf)
outgoalsprob
#O se puede realizar de la siguiente manera
outgoalsprob <- prop.table(x=outgoals)
#Importa los datos de soccer de la temporada 2019/2020 de la primera divisiÃ³n de la liga espaÃ±ola a R, los datos
# los puedes encontrar en el siguiente enlace: https://www.football-data.co.uk/spainm.php
bbva1920 <- read.csv("SP1.csv")
#Importa los datos de soccer de la temporada 2019/2020 de la primera divisiÃ³n de la liga espaÃ±ola a R, los datos
# los puedes encontrar en el siguiente enlace: https://www.football-data.co.uk/spainm.php
bbva1920 <- read.csv("SP1.csv")
#Importa los datos de soccer de la temporada 2019/2020 de la primera divisiÃ³n de la liga espaÃ±ola a R, los datos
# los puedes encontrar en el siguiente enlace: https://www.football-data.co.uk/spainm.php
setwd("BEDU/DataScience/Postworks/Poswork 1")
bbva1920 <- read.csv("")
#Importa los datos de soccer de la temporada 2019/2020 de la primera divisiÃ³n de la liga espaÃ±ola a R, los datos
# los puedes encontrar en el siguiente enlace: https://www.football-data.co.uk/spainm.php
setwd("BEDU/DataScience/Postworks/Poswork 1/")
#Importa los datos de soccer de la temporada 2019/2020 de la primera divisiÃ³n de la liga espaÃ±ola a R, los datos
# los puedes encontrar en el siguiente enlace: https://www.football-data.co.uk/spainm.php
setwd("BEDU/Postwork 1/")
bbva1920 <- read.csv("")
#Importa los datos de soccer de la temporada 2019/2020 de la primera divisiÃ³n de la liga espaÃ±ola a R, los datos
# los puedes encontrar en el siguiente enlace: https://www.football-data.co.uk/spainm.php
bbva1920 <- read.csv("SP1.csv")
#Del data frame que resulta de importar los datos a R, extrae las columnas que contienen los nÃºmeros de goles
#anotados por los equipos que jugaron en casa (FTHG) y los goles anotados por los equipos que jugaron como visitante (FTAG)
goals <- select(bbva1920,FTHG,FTAG)
#Primer Postwork
library(dplyr)
#Del data frame que resulta de importar los datos a R, extrae las columnas que contienen los nÃºmeros de goles
#anotados por los equipos que jugaron en casa (FTHG) y los goles anotados por los equipos que jugaron como visitante (FTAG)
goals <- select(bbva1920,FTHG,FTAG)
goals
#Consulta cÃ³mo funciona la funciÃ³n table en R al ejecutar en la consola ?table
homegoals <- table(goals$FTHG)
outgoals <- table(goals$FTAG)
hogoals <- table(goals)
hogoals
#Obtener el tam de los registros
n<-length(goals$FTAG)
n
#Probabilidad Marginal de Goles Equipos Visitantes
sumf<-outgoals/n
sumf
#O se puede realizar de la siguiente manera
outgoalsprob <- prop.table(x=outgoals)
outgoalsprob
sumf <-apply(hogoals,2,sum)#Filas
sumf
sumf/n
